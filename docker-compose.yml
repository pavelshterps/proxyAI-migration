version: '3.8'
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proxyai_api
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - RESULTS_FOLDER=/app/results
      - UPLOAD_FOLDER=/app/uploads

  worker_cpu:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proxyai_worker_cpu
    command: >
      celery -A tasks worker
      --loglevel=info
      --concurrency=1
      --queues=split_cpu,dispatch_cpu,collect_cpu
    volumes:
      - ./:/app
    depends_on:
      - api
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - UPLOAD_FOLDER=/app/uploads
      - RESULTS_FOLDER=/app/results

  gpu-worker:
    build:
      context: .
      dockerfile: Dockerfile.gpu
    container_name: proxyai_worker_gpu
    runtime: nvidia
    command: >
      celery -A tasks worker
      --loglevel=info
      --concurrency=1
      --queues=transcribe_gpu,diarize_gpu
    volumes:
      - ./:/app
    depends_on:
      - api
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - UPLOAD_FOLDER=/app/uploads
      - RESULTS_FOLDER=/app/results
      - NVIDIA_VISIBLE_DEVICES=all

  redis:
    image: redis:7-alpine
    container_name: proxyai_redis
    ports:
      - "6379:6379"

  db:
    image: postgres:15-alpine
    container_name: proxyai_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata: